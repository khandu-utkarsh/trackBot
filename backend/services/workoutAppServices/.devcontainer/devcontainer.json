{
    "name": "Workout App Service Development",
    "dockerComposeFile": "../../../docker-compose.yml",
    "service": "workout-app",
    "workspaceFolder": "/app",
    "shutdownAction": "stopCompose",
    "customizations": {
        "vscode": {
            "extensions": [
                // Go extensions
                "golang.go",
                
                // Docker and containers
                "ms-azuretools.vscode-docker",
                
                // Database extensions
                "ms-ossdata.vscode-postgresql",
                
                // General development
                "ms-vscode.vscode-json",
                "redhat.vscode-yaml",
                "ms-vscode.vscode-thunder-client",
                "eamodio.gitlens"
            ],
            "settings": {
                // Go settings
                "go.toolsManagement.checkForUpdates": "local",
                "go.useLanguageServer": true,
                "go.gopath": "/go",
                "go.goroot": "/usr/local/go",
                "go.lintOnSave": "package",
                "go.formatTool": "goimports",
                "go.lintTool": "golint",
                "go.vetOnSave": "package",
                "go.buildOnSave": "package",
                "go.testOnSave": false,
                "go.coverOnSave": false,
                
                // Editor settings
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "editor.rulers": [100],
                "files.trimTrailingWhitespace": true,
                "files.insertFinalNewline": true,
                
                // Terminal settings
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.cwd": "/app",
                
                // File associations
                "files.associations": {
                    "*.env.*": "properties",
                    "docker-compose*.yml": "yaml",
                    "Dockerfile*": "dockerfile",
                    "go.mod": "go-mod",
                    "go.sum": "go-sum"
                }
            }
        }
    },
    "forwardPorts": [
        8080,  // Workout App (Go)
        8081,  // LLM Service (for API calls)
        5432,  // PostgreSQL
        2345   // Go debugger (Delve)
    ],
    "portsAttributes": {
        "8080": {
            "label": "Workout App API (Go)",
            "onAutoForward": "notify"
        },
        "8081": {
            "label": "LLM Service API",
            "onAutoForward": "ignore"
        },
        "5432": {
            "label": "PostgreSQL Database",
            "onAutoForward": "ignore"
        },
        "2345": {
            "label": "Go Debugger (Delve)",
            "onAutoForward": "ignore"
        }
    },
    "postCreateCommand": "go mod download && go install github.com/go-delve/delve/cmd/dlv@latest",
    "postStartCommand": "echo 'Workout App Service Ready!' && echo '  API: http://localhost:8080' && echo '  Debugger: localhost:2345'",
    "remoteUser": "root",
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/go:1": {}
    },
    "remoteEnv": {
        "GOPATH": "/go",
        "GOROOT": "/usr/local/go",
        "GO_ENV": "development"
    }
} 