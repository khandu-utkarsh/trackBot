/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LLMServiceMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LLMServiceMessageRequest{}

// LLMServiceMessageRequest Request to the LLM service to process a conversation.
type LLMServiceMessageRequest struct {
	Messages []Message `json:"messages"`
	// ID of the user making the request.
	UserId int64 `json:"user_id"`
	// ID of the conversation to which these messages belong.
	ConversationId int64 `json:"conversation_id"`
}

type _LLMServiceMessageRequest LLMServiceMessageRequest

// NewLLMServiceMessageRequest instantiates a new LLMServiceMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLLMServiceMessageRequest(messages []Message, userId int64, conversationId int64) *LLMServiceMessageRequest {
	this := LLMServiceMessageRequest{}
	this.Messages = messages
	this.UserId = userId
	this.ConversationId = conversationId
	return &this
}

// NewLLMServiceMessageRequestWithDefaults instantiates a new LLMServiceMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLLMServiceMessageRequestWithDefaults() *LLMServiceMessageRequest {
	this := LLMServiceMessageRequest{}
	return &this
}

// GetMessages returns the Messages field value
func (o *LLMServiceMessageRequest) GetMessages() []Message {
	if o == nil {
		var ret []Message
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageRequest) GetMessagesOk() ([]Message, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *LLMServiceMessageRequest) SetMessages(v []Message) {
	o.Messages = v
}

// GetUserId returns the UserId field value
func (o *LLMServiceMessageRequest) GetUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageRequest) GetUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *LLMServiceMessageRequest) SetUserId(v int64) {
	o.UserId = v
}

// GetConversationId returns the ConversationId field value
func (o *LLMServiceMessageRequest) GetConversationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageRequest) GetConversationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConversationId, true
}

// SetConversationId sets field value
func (o *LLMServiceMessageRequest) SetConversationId(v int64) {
	o.ConversationId = v
}

func (o LLMServiceMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LLMServiceMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages"] = o.Messages
	toSerialize["user_id"] = o.UserId
	toSerialize["conversation_id"] = o.ConversationId
	return toSerialize, nil
}

func (o *LLMServiceMessageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messages",
		"user_id",
		"conversation_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLLMServiceMessageRequest := _LLMServiceMessageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLLMServiceMessageRequest)

	if err != nil {
		return err
	}

	*o = LLMServiceMessageRequest(varLLMServiceMessageRequest)

	return err
}

type NullableLLMServiceMessageRequest struct {
	value *LLMServiceMessageRequest
	isSet bool
}

func (v NullableLLMServiceMessageRequest) Get() *LLMServiceMessageRequest {
	return v.value
}

func (v *NullableLLMServiceMessageRequest) Set(val *LLMServiceMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLLMServiceMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLLMServiceMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLLMServiceMessageRequest(val *LLMServiceMessageRequest) *NullableLLMServiceMessageRequest {
	return &NullableLLMServiceMessageRequest{value: val, isSet: true}
}

func (v NullableLLMServiceMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLLMServiceMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


