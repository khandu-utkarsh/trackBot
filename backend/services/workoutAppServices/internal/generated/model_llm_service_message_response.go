/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LLMServiceMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LLMServiceMessageResponse{}

// LLMServiceMessageResponse Response from the LLM service to process a conversation.
type LLMServiceMessageResponse struct {
	Message Message `json:"message"`
	// Time taken to generate the response in milliseconds.
	ResponseTimeMs *int64 `json:"response_time_ms,omitempty"`
	// Identifier of the model used to generate the response.
	ModelName *string `json:"model_name,omitempty"`
}

type _LLMServiceMessageResponse LLMServiceMessageResponse

// NewLLMServiceMessageResponse instantiates a new LLMServiceMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLLMServiceMessageResponse(message Message) *LLMServiceMessageResponse {
	this := LLMServiceMessageResponse{}
	this.Message = message
	return &this
}

// NewLLMServiceMessageResponseWithDefaults instantiates a new LLMServiceMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLLMServiceMessageResponseWithDefaults() *LLMServiceMessageResponse {
	this := LLMServiceMessageResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *LLMServiceMessageResponse) GetMessage() Message {
	if o == nil {
		var ret Message
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageResponse) GetMessageOk() (*Message, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *LLMServiceMessageResponse) SetMessage(v Message) {
	o.Message = v
}

// GetResponseTimeMs returns the ResponseTimeMs field value if set, zero value otherwise.
func (o *LLMServiceMessageResponse) GetResponseTimeMs() int64 {
	if o == nil || IsNil(o.ResponseTimeMs) {
		var ret int64
		return ret
	}
	return *o.ResponseTimeMs
}

// GetResponseTimeMsOk returns a tuple with the ResponseTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageResponse) GetResponseTimeMsOk() (*int64, bool) {
	if o == nil || IsNil(o.ResponseTimeMs) {
		return nil, false
	}
	return o.ResponseTimeMs, true
}

// HasResponseTimeMs returns a boolean if a field has been set.
func (o *LLMServiceMessageResponse) HasResponseTimeMs() bool {
	if o != nil && !IsNil(o.ResponseTimeMs) {
		return true
	}

	return false
}

// SetResponseTimeMs gets a reference to the given int64 and assigns it to the ResponseTimeMs field.
func (o *LLMServiceMessageResponse) SetResponseTimeMs(v int64) {
	o.ResponseTimeMs = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *LLMServiceMessageResponse) GetModelName() string {
	if o == nil || IsNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LLMServiceMessageResponse) GetModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *LLMServiceMessageResponse) HasModelName() bool {
	if o != nil && !IsNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *LLMServiceMessageResponse) SetModelName(v string) {
	o.ModelName = &v
}

func (o LLMServiceMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LLMServiceMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	if !IsNil(o.ResponseTimeMs) {
		toSerialize["response_time_ms"] = o.ResponseTimeMs
	}
	if !IsNil(o.ModelName) {
		toSerialize["model_name"] = o.ModelName
	}
	return toSerialize, nil
}

func (o *LLMServiceMessageResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLLMServiceMessageResponse := _LLMServiceMessageResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLLMServiceMessageResponse)

	if err != nil {
		return err
	}

	*o = LLMServiceMessageResponse(varLLMServiceMessageResponse)

	return err
}

type NullableLLMServiceMessageResponse struct {
	value *LLMServiceMessageResponse
	isSet bool
}

func (v NullableLLMServiceMessageResponse) Get() *LLMServiceMessageResponse {
	return v.value
}

func (v *NullableLLMServiceMessageResponse) Set(val *LLMServiceMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLLMServiceMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLLMServiceMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLLMServiceMessageResponse(val *LLMServiceMessageResponse) *NullableLLMServiceMessageResponse {
	return &NullableLLMServiceMessageResponse{value: val, isSet: true}
}

func (v NullableLLMServiceMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLLMServiceMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


