/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WeightExerciseResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeightExerciseResponse{}

// WeightExerciseResponse struct for WeightExerciseResponse
type WeightExerciseResponse struct {
	// Unique identifier for the exercise
	Id int64 `json:"id"`
	// ID of the user who created the exercise
	UserId int64 `json:"user_id"`
	// ID of the workout this exercise belongs to
	WorkoutId int64 `json:"workout_id"`
	// Name of the exercise
	Name string `json:"name"`
	// Additional notes
	Notes *string `json:"notes,omitempty"`
	// Repetitions per set
	Reps int32 `json:"reps"`
	// Weight in kilograms
	Weight float32 `json:"weight"`
	// Timestamp when the exercise was created
	CreatedAt time.Time `json:"created_at"`
}

type _WeightExerciseResponse WeightExerciseResponse

// NewWeightExerciseResponse instantiates a new WeightExerciseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeightExerciseResponse(id int64, userId int64, workoutId int64, name string, reps int32, weight float32, createdAt time.Time) *WeightExerciseResponse {
	this := WeightExerciseResponse{}
	this.Id = id
	this.UserId = userId
	this.WorkoutId = workoutId
	this.Name = name
	this.Reps = reps
	this.Weight = weight
	this.CreatedAt = createdAt
	return &this
}

// NewWeightExerciseResponseWithDefaults instantiates a new WeightExerciseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeightExerciseResponseWithDefaults() *WeightExerciseResponse {
	this := WeightExerciseResponse{}
	return &this
}

// GetId returns the Id field value
func (o *WeightExerciseResponse) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WeightExerciseResponse) SetId(v int64) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *WeightExerciseResponse) GetUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *WeightExerciseResponse) SetUserId(v int64) {
	o.UserId = v
}

// GetWorkoutId returns the WorkoutId field value
func (o *WeightExerciseResponse) GetWorkoutId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WorkoutId
}

// GetWorkoutIdOk returns a tuple with the WorkoutId field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetWorkoutIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkoutId, true
}

// SetWorkoutId sets field value
func (o *WeightExerciseResponse) SetWorkoutId(v int64) {
	o.WorkoutId = v
}

// GetName returns the Name field value
func (o *WeightExerciseResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WeightExerciseResponse) SetName(v string) {
	o.Name = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *WeightExerciseResponse) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *WeightExerciseResponse) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *WeightExerciseResponse) SetNotes(v string) {
	o.Notes = &v
}

// GetReps returns the Reps field value
func (o *WeightExerciseResponse) GetReps() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Reps
}

// GetRepsOk returns a tuple with the Reps field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetRepsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reps, true
}

// SetReps sets field value
func (o *WeightExerciseResponse) SetReps(v int32) {
	o.Reps = v
}

// GetWeight returns the Weight field value
func (o *WeightExerciseResponse) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *WeightExerciseResponse) SetWeight(v float32) {
	o.Weight = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WeightExerciseResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WeightExerciseResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WeightExerciseResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o WeightExerciseResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeightExerciseResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user_id"] = o.UserId
	toSerialize["workout_id"] = o.WorkoutId
	toSerialize["name"] = o.Name
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	toSerialize["reps"] = o.Reps
	toSerialize["weight"] = o.Weight
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *WeightExerciseResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"user_id",
		"workout_id",
		"name",
		"reps",
		"weight",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWeightExerciseResponse := _WeightExerciseResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWeightExerciseResponse)

	if err != nil {
		return err
	}

	*o = WeightExerciseResponse(varWeightExerciseResponse)

	return err
}

type NullableWeightExerciseResponse struct {
	value *WeightExerciseResponse
	isSet bool
}

func (v NullableWeightExerciseResponse) Get() *WeightExerciseResponse {
	return v.value
}

func (v *NullableWeightExerciseResponse) Set(val *WeightExerciseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWeightExerciseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWeightExerciseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeightExerciseResponse(val *WeightExerciseResponse) *NullableWeightExerciseResponse {
	return &NullableWeightExerciseResponse{value: val, isSet: true}
}

func (v NullableWeightExerciseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeightExerciseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


