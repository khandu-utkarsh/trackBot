/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
)

// checks if the ListMessagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMessagesRequest{}

// ListMessagesRequest struct for ListMessagesRequest
type ListMessagesRequest struct {
	ConversationId *int64 `json:"conversation_id,omitempty"`
	UserId *int64 `json:"user_id,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
}

// NewListMessagesRequest instantiates a new ListMessagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMessagesRequest() *ListMessagesRequest {
	this := ListMessagesRequest{}
	return &this
}

// NewListMessagesRequestWithDefaults instantiates a new ListMessagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMessagesRequestWithDefaults() *ListMessagesRequest {
	this := ListMessagesRequest{}
	return &this
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise.
func (o *ListMessagesRequest) GetConversationId() int64 {
	if o == nil || IsNil(o.ConversationId) {
		var ret int64
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMessagesRequest) GetConversationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ConversationId) {
		return nil, false
	}
	return o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *ListMessagesRequest) HasConversationId() bool {
	if o != nil && !IsNil(o.ConversationId) {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given int64 and assigns it to the ConversationId field.
func (o *ListMessagesRequest) SetConversationId(v int64) {
	o.ConversationId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ListMessagesRequest) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMessagesRequest) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ListMessagesRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *ListMessagesRequest) SetUserId(v int64) {
	o.UserId = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListMessagesRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMessagesRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListMessagesRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ListMessagesRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ListMessagesRequest) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMessagesRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ListMessagesRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *ListMessagesRequest) SetOffset(v int32) {
	o.Offset = &v
}

func (o ListMessagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMessagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConversationId) {
		toSerialize["conversation_id"] = o.ConversationId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

type NullableListMessagesRequest struct {
	value *ListMessagesRequest
	isSet bool
}

func (v NullableListMessagesRequest) Get() *ListMessagesRequest {
	return v.value
}

func (v *NullableListMessagesRequest) Set(val *ListMessagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListMessagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListMessagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMessagesRequest(val *ListMessagesRequest) *NullableListMessagesRequest {
	return &NullableListMessagesRequest{value: val, isSet: true}
}

func (v NullableListMessagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMessagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


