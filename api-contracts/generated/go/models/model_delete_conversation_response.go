/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DeleteConversationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteConversationResponse{}

// DeleteConversationResponse Response after successfully deleting a conversation and its messages.
type DeleteConversationResponse struct {
	// ID of the deleted conversation.
	Id int64 `json:"id"`
	// Title of the deleted conversation.
	Title string `json:"title"`
	// Timestamp when the conversation was deleted.
	DeletedAt time.Time `json:"deleted_at"`
	// Number of messages that were deleted along with the conversation.
	MessagesDeletedCount int32 `json:"messages_deleted_count"`
}

type _DeleteConversationResponse DeleteConversationResponse

// NewDeleteConversationResponse instantiates a new DeleteConversationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteConversationResponse(id int64, title string, deletedAt time.Time, messagesDeletedCount int32) *DeleteConversationResponse {
	this := DeleteConversationResponse{}
	this.Id = id
	this.Title = title
	this.DeletedAt = deletedAt
	this.MessagesDeletedCount = messagesDeletedCount
	return &this
}

// NewDeleteConversationResponseWithDefaults instantiates a new DeleteConversationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteConversationResponseWithDefaults() *DeleteConversationResponse {
	this := DeleteConversationResponse{}
	return &this
}

// GetId returns the Id field value
func (o *DeleteConversationResponse) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeleteConversationResponse) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeleteConversationResponse) SetId(v int64) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *DeleteConversationResponse) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *DeleteConversationResponse) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *DeleteConversationResponse) SetTitle(v string) {
	o.Title = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *DeleteConversationResponse) GetDeletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *DeleteConversationResponse) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *DeleteConversationResponse) SetDeletedAt(v time.Time) {
	o.DeletedAt = v
}

// GetMessagesDeletedCount returns the MessagesDeletedCount field value
func (o *DeleteConversationResponse) GetMessagesDeletedCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessagesDeletedCount
}

// GetMessagesDeletedCountOk returns a tuple with the MessagesDeletedCount field value
// and a boolean to check if the value has been set.
func (o *DeleteConversationResponse) GetMessagesDeletedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesDeletedCount, true
}

// SetMessagesDeletedCount sets field value
func (o *DeleteConversationResponse) SetMessagesDeletedCount(v int32) {
	o.MessagesDeletedCount = v
}

func (o DeleteConversationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteConversationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["deleted_at"] = o.DeletedAt
	toSerialize["messages_deleted_count"] = o.MessagesDeletedCount
	return toSerialize, nil
}

func (o *DeleteConversationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"deleted_at",
		"messages_deleted_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteConversationResponse := _DeleteConversationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteConversationResponse)

	if err != nil {
		return err
	}

	*o = DeleteConversationResponse(varDeleteConversationResponse)

	return err
}

type NullableDeleteConversationResponse struct {
	value *DeleteConversationResponse
	isSet bool
}

func (v NullableDeleteConversationResponse) Get() *DeleteConversationResponse {
	return v.value
}

func (v *NullableDeleteConversationResponse) Set(val *DeleteConversationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteConversationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteConversationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteConversationResponse(val *DeleteConversationResponse) *NullableDeleteConversationResponse {
	return &NullableDeleteConversationResponse{value: val, isSet: true}
}

func (v NullableDeleteConversationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteConversationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


