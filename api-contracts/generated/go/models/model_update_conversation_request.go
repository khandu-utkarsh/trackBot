/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
)

// checks if the UpdateConversationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConversationRequest{}

// UpdateConversationRequest Request to update a conversation.
type UpdateConversationRequest struct {
	// Updated title of the conversation.
	Title *string `json:"title,omitempty"`
}

// NewUpdateConversationRequest instantiates a new UpdateConversationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConversationRequest() *UpdateConversationRequest {
	this := UpdateConversationRequest{}
	return &this
}

// NewUpdateConversationRequestWithDefaults instantiates a new UpdateConversationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConversationRequestWithDefaults() *UpdateConversationRequest {
	this := UpdateConversationRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateConversationRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConversationRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateConversationRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateConversationRequest) SetTitle(v string) {
	o.Title = &v
}

func (o UpdateConversationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConversationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableUpdateConversationRequest struct {
	value *UpdateConversationRequest
	isSet bool
}

func (v NullableUpdateConversationRequest) Get() *UpdateConversationRequest {
	return v.value
}

func (v *NullableUpdateConversationRequest) Set(val *UpdateConversationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConversationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConversationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConversationRequest(val *UpdateConversationRequest) *NullableUpdateConversationRequest {
	return &NullableUpdateConversationRequest{value: val, isSet: true}
}

func (v NullableUpdateConversationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConversationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


