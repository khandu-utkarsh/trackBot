/*
TrackBot App API

Comprehensive API for the TrackBot Application helping in logging workouts, exercises and nutrition using AI.  This API provides endpoints for: - User management - Workout tracking and management - Exercise logging (cardio and weight training) - AI conversation and messaging  All timestamps are in ISO 8601 format (UTC). 

API version: 1.0.0
Contact: utkarshkhandelwal2011@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_models

import (
	"encoding/json"
)

// checks if the DeleteConversationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteConversationRequest{}

// DeleteConversationRequest Request to delete a conversation and all its messages.
type DeleteConversationRequest struct {
	// Confirmation flag to prevent accidental deletion.
	Confirm *bool `json:"confirm,omitempty"`
}

// NewDeleteConversationRequest instantiates a new DeleteConversationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteConversationRequest() *DeleteConversationRequest {
	this := DeleteConversationRequest{}
	var confirm bool = false
	this.Confirm = &confirm
	return &this
}

// NewDeleteConversationRequestWithDefaults instantiates a new DeleteConversationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteConversationRequestWithDefaults() *DeleteConversationRequest {
	this := DeleteConversationRequest{}
	var confirm bool = false
	this.Confirm = &confirm
	return &this
}

// GetConfirm returns the Confirm field value if set, zero value otherwise.
func (o *DeleteConversationRequest) GetConfirm() bool {
	if o == nil || IsNil(o.Confirm) {
		var ret bool
		return ret
	}
	return *o.Confirm
}

// GetConfirmOk returns a tuple with the Confirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteConversationRequest) GetConfirmOk() (*bool, bool) {
	if o == nil || IsNil(o.Confirm) {
		return nil, false
	}
	return o.Confirm, true
}

// HasConfirm returns a boolean if a field has been set.
func (o *DeleteConversationRequest) HasConfirm() bool {
	if o != nil && !IsNil(o.Confirm) {
		return true
	}

	return false
}

// SetConfirm gets a reference to the given bool and assigns it to the Confirm field.
func (o *DeleteConversationRequest) SetConfirm(v bool) {
	o.Confirm = &v
}

func (o DeleteConversationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteConversationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Confirm) {
		toSerialize["confirm"] = o.Confirm
	}
	return toSerialize, nil
}

type NullableDeleteConversationRequest struct {
	value *DeleteConversationRequest
	isSet bool
}

func (v NullableDeleteConversationRequest) Get() *DeleteConversationRequest {
	return v.value
}

func (v *NullableDeleteConversationRequest) Set(val *DeleteConversationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteConversationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteConversationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteConversationRequest(val *DeleteConversationRequest) *NullableDeleteConversationRequest {
	return &NullableDeleteConversationRequest{value: val, isSet: true}
}

func (v NullableDeleteConversationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteConversationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


